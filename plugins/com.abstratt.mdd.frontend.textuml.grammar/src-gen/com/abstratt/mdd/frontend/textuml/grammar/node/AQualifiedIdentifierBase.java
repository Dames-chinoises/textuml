/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.frontend.textuml.grammar.node;

import com.abstratt.mdd.frontend.textuml.grammar.analysis.*;

@SuppressWarnings("nls")
public final class AQualifiedIdentifierBase extends PQualifiedIdentifierBase
{
    private TIdentifier _identifier_;
    private PQualifiedIdentifierTail _qualifiedIdentifierTail_;

    public AQualifiedIdentifierBase()
    {
        // Constructor
    }

    public AQualifiedIdentifierBase(
        @SuppressWarnings("hiding") TIdentifier _identifier_,
        @SuppressWarnings("hiding") PQualifiedIdentifierTail _qualifiedIdentifierTail_)
    {
        // Constructor
        setIdentifier(_identifier_);

        setQualifiedIdentifierTail(_qualifiedIdentifierTail_);

    }

    @Override
    public Object clone()
    {
        return new AQualifiedIdentifierBase(
            cloneNode(this._identifier_),
            cloneNode(this._qualifiedIdentifierTail_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAQualifiedIdentifierBase(this);
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public PQualifiedIdentifierTail getQualifiedIdentifierTail()
    {
        return this._qualifiedIdentifierTail_;
    }

    public void setQualifiedIdentifierTail(PQualifiedIdentifierTail node)
    {
        if(this._qualifiedIdentifierTail_ != null)
        {
            this._qualifiedIdentifierTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._qualifiedIdentifierTail_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identifier_)
            + toString(this._qualifiedIdentifierTail_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._qualifiedIdentifierTail_ == child)
        {
            this._qualifiedIdentifierTail_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(this._qualifiedIdentifierTail_ == oldChild)
        {
            setQualifiedIdentifierTail((PQualifiedIdentifierTail) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
