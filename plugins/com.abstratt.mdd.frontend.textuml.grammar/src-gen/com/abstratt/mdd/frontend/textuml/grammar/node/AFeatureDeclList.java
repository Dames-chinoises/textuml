/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.frontend.textuml.grammar.node;

import com.abstratt.mdd.frontend.textuml.grammar.analysis.*;

@SuppressWarnings("nls")
public final class AFeatureDeclList extends PFeatureDeclList
{
    private PFeatureDecl _featureDecl_;
    private PFeatureDeclList _featureDeclList_;

    public AFeatureDeclList()
    {
        // Constructor
    }

    public AFeatureDeclList(
        @SuppressWarnings("hiding") PFeatureDecl _featureDecl_,
        @SuppressWarnings("hiding") PFeatureDeclList _featureDeclList_)
    {
        // Constructor
        setFeatureDecl(_featureDecl_);

        setFeatureDeclList(_featureDeclList_);

    }

    @Override
    public Object clone()
    {
        return new AFeatureDeclList(
            cloneNode(this._featureDecl_),
            cloneNode(this._featureDeclList_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFeatureDeclList(this);
    }

    public PFeatureDecl getFeatureDecl()
    {
        return this._featureDecl_;
    }

    public void setFeatureDecl(PFeatureDecl node)
    {
        if(this._featureDecl_ != null)
        {
            this._featureDecl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._featureDecl_ = node;
    }

    public PFeatureDeclList getFeatureDeclList()
    {
        return this._featureDeclList_;
    }

    public void setFeatureDeclList(PFeatureDeclList node)
    {
        if(this._featureDeclList_ != null)
        {
            this._featureDeclList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._featureDeclList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._featureDecl_)
            + toString(this._featureDeclList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._featureDecl_ == child)
        {
            this._featureDecl_ = null;
            return;
        }

        if(this._featureDeclList_ == child)
        {
            this._featureDeclList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._featureDecl_ == oldChild)
        {
            setFeatureDecl((PFeatureDecl) newChild);
            return;
        }

        if(this._featureDeclList_ == oldChild)
        {
            setFeatureDeclList((PFeatureDeclList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
