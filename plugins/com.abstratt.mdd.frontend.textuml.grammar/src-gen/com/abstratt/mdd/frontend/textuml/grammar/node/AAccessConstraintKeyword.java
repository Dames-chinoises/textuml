/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.frontend.textuml.grammar.node;

import com.abstratt.mdd.frontend.textuml.grammar.analysis.*;

@SuppressWarnings("nls")
public final class AAccessConstraintKeyword extends PConstraintKeyword
{
    private TAccess _access_;

    public AAccessConstraintKeyword()
    {
        // Constructor
    }

    public AAccessConstraintKeyword(
        @SuppressWarnings("hiding") TAccess _access_)
    {
        // Constructor
        setAccess(_access_);

    }

    @Override
    public Object clone()
    {
        return new AAccessConstraintKeyword(
            cloneNode(this._access_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAccessConstraintKeyword(this);
    }

    public TAccess getAccess()
    {
        return this._access_;
    }

    public void setAccess(TAccess node)
    {
        if(this._access_ != null)
        {
            this._access_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._access_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._access_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._access_ == child)
        {
            this._access_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._access_ == oldChild)
        {
            setAccess((TAccess) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
