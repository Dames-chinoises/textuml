/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.frontend.textuml.grammar.node;

import com.abstratt.mdd.frontend.textuml.grammar.analysis.*;

@SuppressWarnings("nls")
public final class ADerivedModifier extends PModifier
{
    private TDerived _derived_;

    public ADerivedModifier()
    {
        // Constructor
    }

    public ADerivedModifier(
        @SuppressWarnings("hiding") TDerived _derived_)
    {
        // Constructor
        setDerived(_derived_);

    }

    @Override
    public Object clone()
    {
        return new ADerivedModifier(
            cloneNode(this._derived_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADerivedModifier(this);
    }

    public TDerived getDerived()
    {
        return this._derived_;
    }

    public void setDerived(TDerived node)
    {
        if(this._derived_ != null)
        {
            this._derived_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._derived_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._derived_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._derived_ == child)
        {
            this._derived_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._derived_ == oldChild)
        {
            setDerived((TDerived) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
