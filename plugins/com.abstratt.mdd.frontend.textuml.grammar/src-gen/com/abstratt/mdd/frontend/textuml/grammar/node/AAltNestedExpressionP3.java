/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.frontend.textuml.grammar.node;

import com.abstratt.mdd.frontend.textuml.grammar.analysis.*;

@SuppressWarnings("nls")
public final class AAltNestedExpressionP3 extends PExpressionP3
{
    private PExpressionP2 _expressionP2_;

    public AAltNestedExpressionP3()
    {
        // Constructor
    }

    public AAltNestedExpressionP3(
        @SuppressWarnings("hiding") PExpressionP2 _expressionP2_)
    {
        // Constructor
        setExpressionP2(_expressionP2_);

    }

    @Override
    public Object clone()
    {
        return new AAltNestedExpressionP3(
            cloneNode(this._expressionP2_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAltNestedExpressionP3(this);
    }

    public PExpressionP2 getExpressionP2()
    {
        return this._expressionP2_;
    }

    public void setExpressionP2(PExpressionP2 node)
    {
        if(this._expressionP2_ != null)
        {
            this._expressionP2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressionP2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expressionP2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expressionP2_ == child)
        {
            this._expressionP2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expressionP2_ == oldChild)
        {
            setExpressionP2((PExpressionP2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
