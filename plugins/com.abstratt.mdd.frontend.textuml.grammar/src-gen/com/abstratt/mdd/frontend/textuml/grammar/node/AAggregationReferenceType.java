/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.frontend.textuml.grammar.node;

import com.abstratt.mdd.frontend.textuml.grammar.analysis.*;

@SuppressWarnings("nls")
public final class AAggregationReferenceType extends PReferenceType
{
    private TAggregation _aggregation_;

    public AAggregationReferenceType()
    {
        // Constructor
    }

    public AAggregationReferenceType(
        @SuppressWarnings("hiding") TAggregation _aggregation_)
    {
        // Constructor
        setAggregation(_aggregation_);

    }

    @Override
    public Object clone()
    {
        return new AAggregationReferenceType(
            cloneNode(this._aggregation_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAggregationReferenceType(this);
    }

    public TAggregation getAggregation()
    {
        return this._aggregation_;
    }

    public void setAggregation(TAggregation node)
    {
        if(this._aggregation_ != null)
        {
            this._aggregation_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aggregation_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aggregation_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aggregation_ == child)
        {
            this._aggregation_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aggregation_ == oldChild)
        {
            setAggregation((TAggregation) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
