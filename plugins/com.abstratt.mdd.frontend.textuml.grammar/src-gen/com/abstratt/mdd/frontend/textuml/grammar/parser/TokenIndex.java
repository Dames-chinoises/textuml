/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.frontend.textuml.grammar.parser;

import com.abstratt.mdd.frontend.textuml.grammar.node.*;
import com.abstratt.mdd.frontend.textuml.grammar.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTAbstract(@SuppressWarnings("unused") TAbstract node)
    {
        this.index = 0;
    }

    @Override
    public void caseTAccess(@SuppressWarnings("unused") TAccess node)
    {
        this.index = 1;
    }

    @Override
    public void caseTActor(@SuppressWarnings("unused") TActor node)
    {
        this.index = 2;
    }

    @Override
    public void caseTAggregation(@SuppressWarnings("unused") TAggregation node)
    {
        this.index = 3;
    }

    @Override
    public void caseTAlias(@SuppressWarnings("unused") TAlias node)
    {
        this.index = 4;
    }

    @Override
    public void caseTAllow(@SuppressWarnings("unused") TAllow node)
    {
        this.index = 5;
    }

    @Override
    public void caseTAll(@SuppressWarnings("unused") TAll node)
    {
        this.index = 6;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 7;
    }

    @Override
    public void caseTAny(@SuppressWarnings("unused") TAny node)
    {
        this.index = 8;
    }

    @Override
    public void caseTAnyone(@SuppressWarnings("unused") TAnyone node)
    {
        this.index = 9;
    }

    @Override
    public void caseTApply(@SuppressWarnings("unused") TApply node)
    {
        this.index = 10;
    }

    @Override
    public void caseTAssociation(@SuppressWarnings("unused") TAssociation node)
    {
        this.index = 11;
    }

    @Override
    public void caseTAs(@SuppressWarnings("unused") TAs node)
    {
        this.index = 12;
    }

    @Override
    public void caseTAttribute(@SuppressWarnings("unused") TAttribute node)
    {
        this.index = 13;
    }

    @Override
    public void caseTBegin(@SuppressWarnings("unused") TBegin node)
    {
        this.index = 14;
    }

    @Override
    public void caseTBroadcast(@SuppressWarnings("unused") TBroadcast node)
    {
        this.index = 15;
    }

    @Override
    public void caseTBy(@SuppressWarnings("unused") TBy node)
    {
        this.index = 16;
    }

    @Override
    public void caseTCall(@SuppressWarnings("unused") TCall node)
    {
        this.index = 17;
    }

    @Override
    public void caseTCatch(@SuppressWarnings("unused") TCatch node)
    {
        this.index = 18;
    }

    @Override
    public void caseTClazz(@SuppressWarnings("unused") TClazz node)
    {
        this.index = 19;
    }

    @Override
    public void caseTComponent(@SuppressWarnings("unused") TComponent node)
    {
        this.index = 20;
    }

    @Override
    public void caseTComposition(@SuppressWarnings("unused") TComposition node)
    {
        this.index = 21;
    }

    @Override
    public void caseTConnector(@SuppressWarnings("unused") TConnector node)
    {
        this.index = 22;
    }

    @Override
    public void caseTConstructor(@SuppressWarnings("unused") TConstructor node)
    {
        this.index = 23;
    }

    @Override
    public void caseTCreate(@SuppressWarnings("unused") TCreate node)
    {
        this.index = 24;
    }

    @Override
    public void caseTDatatype(@SuppressWarnings("unused") TDatatype node)
    {
        this.index = 25;
    }

    @Override
    public void caseTDelete(@SuppressWarnings("unused") TDelete node)
    {
        this.index = 26;
    }

    @Override
    public void caseTDependency(@SuppressWarnings("unused") TDependency node)
    {
        this.index = 27;
    }

    @Override
    public void caseTDerived(@SuppressWarnings("unused") TDerived node)
    {
        this.index = 28;
    }

    @Override
    public void caseTDestroy(@SuppressWarnings("unused") TDestroy node)
    {
        this.index = 29;
    }

    @Override
    public void caseTDo(@SuppressWarnings("unused") TDo node)
    {
        this.index = 30;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 31;
    }

    @Override
    public void caseTElseif(@SuppressWarnings("unused") TElseif node)
    {
        this.index = 32;
    }

    @Override
    public void caseTEnd(@SuppressWarnings("unused") TEnd node)
    {
        this.index = 33;
    }

    @Override
    public void caseTEntry(@SuppressWarnings("unused") TEntry node)
    {
        this.index = 34;
    }

    @Override
    public void caseTEnumeration(@SuppressWarnings("unused") TEnumeration node)
    {
        this.index = 35;
    }

    @Override
    public void caseTExit(@SuppressWarnings("unused") TExit node)
    {
        this.index = 36;
    }

    @Override
    public void caseTExtends(@SuppressWarnings("unused") TExtends node)
    {
        this.index = 37;
    }

    @Override
    public void caseTExtent(@SuppressWarnings("unused") TExtent node)
    {
        this.index = 38;
    }

    @Override
    public void caseTExternal(@SuppressWarnings("unused") TExternal node)
    {
        this.index = 39;
    }

    @Override
    public void caseTFalse(@SuppressWarnings("unused") TFalse node)
    {
        this.index = 40;
    }

    @Override
    public void caseTFinal(@SuppressWarnings("unused") TFinal node)
    {
        this.index = 41;
    }

    @Override
    public void caseTFinally(@SuppressWarnings("unused") TFinally node)
    {
        this.index = 42;
    }

    @Override
    public void caseTFunction(@SuppressWarnings("unused") TFunction node)
    {
        this.index = 43;
    }

    @Override
    public void caseTId(@SuppressWarnings("unused") TId node)
    {
        this.index = 44;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 45;
    }

    @Override
    public void caseTImplements(@SuppressWarnings("unused") TImplements node)
    {
        this.index = 46;
    }

    @Override
    public void caseTImport(@SuppressWarnings("unused") TImport node)
    {
        this.index = 47;
    }

    @Override
    public void caseTIn(@SuppressWarnings("unused") TIn node)
    {
        this.index = 48;
    }

    @Override
    public void caseTInitial(@SuppressWarnings("unused") TInitial node)
    {
        this.index = 49;
    }

    @Override
    public void caseTInout(@SuppressWarnings("unused") TInout node)
    {
        this.index = 50;
    }

    @Override
    public void caseTInterface(@SuppressWarnings("unused") TInterface node)
    {
        this.index = 51;
    }

    @Override
    public void caseTInvariant(@SuppressWarnings("unused") TInvariant node)
    {
        this.index = 52;
    }

    @Override
    public void caseTIs(@SuppressWarnings("unused") TIs node)
    {
        this.index = 53;
    }

    @Override
    public void caseTLink(@SuppressWarnings("unused") TLink node)
    {
        this.index = 54;
    }

    @Override
    public void caseTEnumerationLiteral(@SuppressWarnings("unused") TEnumerationLiteral node)
    {
        this.index = 55;
    }

    @Override
    public void caseTLoad(@SuppressWarnings("unused") TLoad node)
    {
        this.index = 56;
    }

    @Override
    public void caseTModel(@SuppressWarnings("unused") TModel node)
    {
        this.index = 57;
    }

    @Override
    public void caseTNavigable(@SuppressWarnings("unused") TNavigable node)
    {
        this.index = 58;
    }

    @Override
    public void caseTNew(@SuppressWarnings("unused") TNew node)
    {
        this.index = 59;
    }

    @Override
    public void caseTNone(@SuppressWarnings("unused") TNone node)
    {
        this.index = 60;
    }

    @Override
    public void caseTNonunique(@SuppressWarnings("unused") TNonunique node)
    {
        this.index = 61;
    }

    @Override
    public void caseTNot(@SuppressWarnings("unused") TNot node)
    {
        this.index = 62;
    }

    @Override
    public void caseTNull(@SuppressWarnings("unused") TNull node)
    {
        this.index = 63;
    }

    @Override
    public void caseTOn(@SuppressWarnings("unused") TOn node)
    {
        this.index = 64;
    }

    @Override
    public void caseTOperation(@SuppressWarnings("unused") TOperation node)
    {
        this.index = 65;
    }

    @Override
    public void caseTOpposite(@SuppressWarnings("unused") TOpposite node)
    {
        this.index = 66;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 67;
    }

    @Override
    public void caseTOrdered(@SuppressWarnings("unused") TOrdered node)
    {
        this.index = 68;
    }

    @Override
    public void caseTOut(@SuppressWarnings("unused") TOut node)
    {
        this.index = 69;
    }

    @Override
    public void caseTPackage(@SuppressWarnings("unused") TPackage node)
    {
        this.index = 70;
    }

    @Override
    public void caseTParameterset(@SuppressWarnings("unused") TParameterset node)
    {
        this.index = 71;
    }

    @Override
    public void caseTPort(@SuppressWarnings("unused") TPort node)
    {
        this.index = 72;
    }

    @Override
    public void caseTPostcondition(@SuppressWarnings("unused") TPostcondition node)
    {
        this.index = 73;
    }

    @Override
    public void caseTPrecondition(@SuppressWarnings("unused") TPrecondition node)
    {
        this.index = 74;
    }

    @Override
    public void caseTPrimitive(@SuppressWarnings("unused") TPrimitive node)
    {
        this.index = 75;
    }

    @Override
    public void caseTPrivate(@SuppressWarnings("unused") TPrivate node)
    {
        this.index = 76;
    }

    @Override
    public void caseTProfile(@SuppressWarnings("unused") TProfile node)
    {
        this.index = 77;
    }

    @Override
    public void caseTProperty(@SuppressWarnings("unused") TProperty node)
    {
        this.index = 78;
    }

    @Override
    public void caseTProtected(@SuppressWarnings("unused") TProtected node)
    {
        this.index = 79;
    }

    @Override
    public void caseTProvided(@SuppressWarnings("unused") TProvided node)
    {
        this.index = 80;
    }

    @Override
    public void caseTPublic(@SuppressWarnings("unused") TPublic node)
    {
        this.index = 81;
    }

    @Override
    public void caseTQuery(@SuppressWarnings("unused") TQuery node)
    {
        this.index = 82;
    }

    @Override
    public void caseTRaise(@SuppressWarnings("unused") TRaise node)
    {
        this.index = 83;
    }

    @Override
    public void caseTRaises(@SuppressWarnings("unused") TRaises node)
    {
        this.index = 84;
    }

    @Override
    public void caseTRead(@SuppressWarnings("unused") TRead node)
    {
        this.index = 85;
    }

    @Override
    public void caseTReadonly(@SuppressWarnings("unused") TReadonly node)
    {
        this.index = 86;
    }

    @Override
    public void caseTReception(@SuppressWarnings("unused") TReception node)
    {
        this.index = 87;
    }

    @Override
    public void caseTReference(@SuppressWarnings("unused") TReference node)
    {
        this.index = 88;
    }

    @Override
    public void caseTRepeat(@SuppressWarnings("unused") TRepeat node)
    {
        this.index = 89;
    }

    @Override
    public void caseTRequired(@SuppressWarnings("unused") TRequired node)
    {
        this.index = 90;
    }

    @Override
    public void caseTReturn(@SuppressWarnings("unused") TReturn node)
    {
        this.index = 91;
    }

    @Override
    public void caseTRole(@SuppressWarnings("unused") TRole node)
    {
        this.index = 92;
    }

    @Override
    public void caseTSelf(@SuppressWarnings("unused") TSelf node)
    {
        this.index = 93;
    }

    @Override
    public void caseTSend(@SuppressWarnings("unused") TSend node)
    {
        this.index = 94;
    }

    @Override
    public void caseTSignal(@SuppressWarnings("unused") TSignal node)
    {
        this.index = 95;
    }

    @Override
    public void caseTSpecializes(@SuppressWarnings("unused") TSpecializes node)
    {
        this.index = 96;
    }

    @Override
    public void caseTState(@SuppressWarnings("unused") TState node)
    {
        this.index = 97;
    }

    @Override
    public void caseTStatemachine(@SuppressWarnings("unused") TStatemachine node)
    {
        this.index = 98;
    }

    @Override
    public void caseTStatic(@SuppressWarnings("unused") TStatic node)
    {
        this.index = 99;
    }

    @Override
    public void caseTStereotype(@SuppressWarnings("unused") TStereotype node)
    {
        this.index = 100;
    }

    @Override
    public void caseTSubsets(@SuppressWarnings("unused") TSubsets node)
    {
        this.index = 101;
    }

    @Override
    public void caseTTerminate(@SuppressWarnings("unused") TTerminate node)
    {
        this.index = 102;
    }

    @Override
    public void caseTThen(@SuppressWarnings("unused") TThen node)
    {
        this.index = 103;
    }

    @Override
    public void caseTTo(@SuppressWarnings("unused") TTo node)
    {
        this.index = 104;
    }

    @Override
    public void caseTTransition(@SuppressWarnings("unused") TTransition node)
    {
        this.index = 105;
    }

    @Override
    public void caseTTrue(@SuppressWarnings("unused") TTrue node)
    {
        this.index = 106;
    }

    @Override
    public void caseTTry(@SuppressWarnings("unused") TTry node)
    {
        this.index = 107;
    }

    @Override
    public void caseTType(@SuppressWarnings("unused") TType node)
    {
        this.index = 108;
    }

    @Override
    public void caseTUnique(@SuppressWarnings("unused") TUnique node)
    {
        this.index = 109;
    }

    @Override
    public void caseTUnlink(@SuppressWarnings("unused") TUnlink node)
    {
        this.index = 110;
    }

    @Override
    public void caseTUnordered(@SuppressWarnings("unused") TUnordered node)
    {
        this.index = 111;
    }

    @Override
    public void caseTUntil(@SuppressWarnings("unused") TUntil node)
    {
        this.index = 112;
    }

    @Override
    public void caseTUpdate(@SuppressWarnings("unused") TUpdate node)
    {
        this.index = 113;
    }

    @Override
    public void caseTVar(@SuppressWarnings("unused") TVar node)
    {
        this.index = 114;
    }

    @Override
    public void caseTWhen(@SuppressWarnings("unused") TWhen node)
    {
        this.index = 115;
    }

    @Override
    public void caseTWhere(@SuppressWarnings("unused") TWhere node)
    {
        this.index = 116;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 117;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 118;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 119;
    }

    @Override
    public void caseTMult(@SuppressWarnings("unused") TMult node)
    {
        this.index = 120;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 121;
    }

    @Override
    public void caseTAssignop(@SuppressWarnings("unused") TAssignop node)
    {
        this.index = 122;
    }

    @Override
    public void caseTEquals(@SuppressWarnings("unused") TEquals node)
    {
        this.index = 123;
    }

    @Override
    public void caseTEqualsEquals(@SuppressWarnings("unused") TEqualsEquals node)
    {
        this.index = 124;
    }

    @Override
    public void caseTNotEqualsEquals(@SuppressWarnings("unused") TNotEqualsEquals node)
    {
        this.index = 125;
    }

    @Override
    public void caseTLab(@SuppressWarnings("unused") TLab node)
    {
        this.index = 126;
    }

    @Override
    public void caseTLabEquals(@SuppressWarnings("unused") TLabEquals node)
    {
        this.index = 127;
    }

    @Override
    public void caseTRab(@SuppressWarnings("unused") TRab node)
    {
        this.index = 128;
    }

    @Override
    public void caseTRabEquals(@SuppressWarnings("unused") TRabEquals node)
    {
        this.index = 129;
    }

    @Override
    public void caseTNotEquals(@SuppressWarnings("unused") TNotEquals node)
    {
        this.index = 130;
    }

    @Override
    public void caseTElvis(@SuppressWarnings("unused") TElvis node)
    {
        this.index = 131;
    }

    @Override
    public void caseTQuestion(@SuppressWarnings("unused") TQuestion node)
    {
        this.index = 132;
    }

    @Override
    public void caseTBangs(@SuppressWarnings("unused") TBangs node)
    {
        this.index = 133;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 134;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 135;
    }

    @Override
    public void caseTSemicolon(@SuppressWarnings("unused") TSemicolon node)
    {
        this.index = 136;
    }

    @Override
    public void caseTDot(@SuppressWarnings("unused") TDot node)
    {
        this.index = 137;
    }

    @Override
    public void caseTNamespaceSeparator(@SuppressWarnings("unused") TNamespaceSeparator node)
    {
        this.index = 138;
    }

    @Override
    public void caseTHash(@SuppressWarnings("unused") THash node)
    {
        this.index = 139;
    }

    @Override
    public void caseTLParen(@SuppressWarnings("unused") TLParen node)
    {
        this.index = 140;
    }

    @Override
    public void caseTRParen(@SuppressWarnings("unused") TRParen node)
    {
        this.index = 141;
    }

    @Override
    public void caseTLBracket(@SuppressWarnings("unused") TLBracket node)
    {
        this.index = 142;
    }

    @Override
    public void caseTRBracket(@SuppressWarnings("unused") TRBracket node)
    {
        this.index = 143;
    }

    @Override
    public void caseTLCurlyBracket(@SuppressWarnings("unused") TLCurlyBracket node)
    {
        this.index = 144;
    }

    @Override
    public void caseTRCurlyBracket(@SuppressWarnings("unused") TRCurlyBracket node)
    {
        this.index = 145;
    }

    @Override
    public void caseTRightArrow(@SuppressWarnings("unused") TRightArrow node)
    {
        this.index = 146;
    }

    @Override
    public void caseTLeftArrow(@SuppressWarnings("unused") TLeftArrow node)
    {
        this.index = 147;
    }

    @Override
    public void caseTLGuillemot(@SuppressWarnings("unused") TLGuillemot node)
    {
        this.index = 148;
    }

    @Override
    public void caseTRGuillemot(@SuppressWarnings("unused") TRGuillemot node)
    {
        this.index = 149;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 150;
    }

    @Override
    public void caseTInteger(@SuppressWarnings("unused") TInteger node)
    {
        this.index = 151;
    }

    @Override
    public void caseTReal(@SuppressWarnings("unused") TReal node)
    {
        this.index = 152;
    }

    @Override
    public void caseTString(@SuppressWarnings("unused") TString node)
    {
        this.index = 153;
    }

    @Override
    public void caseTUri(@SuppressWarnings("unused") TUri node)
    {
        this.index = 154;
    }

    @Override
    public void caseTModelComment(@SuppressWarnings("unused") TModelComment node)
    {
        this.index = 155;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 156;
    }
}
