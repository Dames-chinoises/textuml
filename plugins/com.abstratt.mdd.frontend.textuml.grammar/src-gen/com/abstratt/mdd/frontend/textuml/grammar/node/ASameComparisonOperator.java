/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.frontend.textuml.grammar.node;

import com.abstratt.mdd.frontend.textuml.grammar.analysis.*;

@SuppressWarnings("nls")
public final class ASameComparisonOperator extends PComparisonOperator
{
    private TEqualsEquals _equalsEquals_;

    public ASameComparisonOperator()
    {
        // Constructor
    }

    public ASameComparisonOperator(
        @SuppressWarnings("hiding") TEqualsEquals _equalsEquals_)
    {
        // Constructor
        setEqualsEquals(_equalsEquals_);

    }

    @Override
    public Object clone()
    {
        return new ASameComparisonOperator(
            cloneNode(this._equalsEquals_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASameComparisonOperator(this);
    }

    public TEqualsEquals getEqualsEquals()
    {
        return this._equalsEquals_;
    }

    public void setEqualsEquals(TEqualsEquals node)
    {
        if(this._equalsEquals_ != null)
        {
            this._equalsEquals_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._equalsEquals_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._equalsEquals_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._equalsEquals_ == child)
        {
            this._equalsEquals_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._equalsEquals_ == oldChild)
        {
            setEqualsEquals((TEqualsEquals) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
