/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.frontend.textuml.grammar.node;

import com.abstratt.mdd.frontend.textuml.grammar.analysis.*;

@SuppressWarnings("nls")
public final class AMultDivBinaryOpLevel2 extends PBinaryOpLevel2
{
    private PMultDiv _multDiv_;

    public AMultDivBinaryOpLevel2()
    {
        // Constructor
    }

    public AMultDivBinaryOpLevel2(
        @SuppressWarnings("hiding") PMultDiv _multDiv_)
    {
        // Constructor
        setMultDiv(_multDiv_);

    }

    @Override
    public Object clone()
    {
        return new AMultDivBinaryOpLevel2(
            cloneNode(this._multDiv_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultDivBinaryOpLevel2(this);
    }

    public PMultDiv getMultDiv()
    {
        return this._multDiv_;
    }

    public void setMultDiv(PMultDiv node)
    {
        if(this._multDiv_ != null)
        {
            this._multDiv_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multDiv_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._multDiv_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._multDiv_ == child)
        {
            this._multDiv_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._multDiv_ == oldChild)
        {
            setMultDiv((PMultDiv) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
