/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.frontend.textuml.grammar.node;

import com.abstratt.mdd.frontend.textuml.grammar.analysis.*;

@SuppressWarnings("nls")
public final class AOptionalTargetObjectDot extends PObjectDot
{
    private TOptionalDot _optionalDot_;

    public AOptionalTargetObjectDot()
    {
        // Constructor
    }

    public AOptionalTargetObjectDot(
        @SuppressWarnings("hiding") TOptionalDot _optionalDot_)
    {
        // Constructor
        setOptionalDot(_optionalDot_);

    }

    @Override
    public Object clone()
    {
        return new AOptionalTargetObjectDot(
            cloneNode(this._optionalDot_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOptionalTargetObjectDot(this);
    }

    public TOptionalDot getOptionalDot()
    {
        return this._optionalDot_;
    }

    public void setOptionalDot(TOptionalDot node)
    {
        if(this._optionalDot_ != null)
        {
            this._optionalDot_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._optionalDot_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._optionalDot_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._optionalDot_ == child)
        {
            this._optionalDot_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._optionalDot_ == oldChild)
        {
            setOptionalDot((TOptionalDot) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
