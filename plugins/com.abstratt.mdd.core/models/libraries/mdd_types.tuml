[StandardProfile::ModelLibrary]
model mdd_types;

apply StandardProfile;

actor Anyone end;

class System
    static query user() : SystemUser;
end;

abstract class SystemUser
end; 

class Assert
    static operation isTrue(condition : Boolean);
    static operation areEqual(expected : any[*], actual : any[*]);
    static operation areSame(expected : any[*], actual : any[*]);    
    static operation isNull(actual : any);
    static operation isNotNull(actual : any);
end;

class Basic
    query same(other : Object) : Boolean;
    query notNull() : Boolean;
    query toString() : String;
end;

(* The type of any. *)
class AnyType specializes Basic
end;

(* The type of null. *) 
class NullType specializes Basic
end;
(* A type for Blob properties *)
class Blob specializes Primitive
end;

(* The implicit super class for all user classes *)
class Object specializes Basic
end;

(* The implicit super datatype for all datatypes *)
datatype Value
  query notEquals(other : Value) : Boolean;
  query greaterThan(r : Value) : Boolean;
  query lowerThan(r : Value) : Boolean;
  query greaterOrEquals(r : Value) : Boolean;
  query lowerOrEquals(r : Value) : Boolean;
  query equals(other : Value) : Boolean;
  query toString() : String;
end;

class ComparableBasic specializes Basic
  query greaterThan(r : any) : Boolean;
  query lowerThan(r : any) : Boolean;
  query greaterOrEquals(r : any) : Boolean;
  query lowerOrEquals(r : any) : Boolean;
  query notEquals(other : any) : Boolean;
  query equals(other : any) : Boolean;
end;


class Primitive specializes ComparableBasic
  attribute value : PrimitiveTypes::String;
end;

class Boolean specializes Primitive 
  query \not() : Boolean;
  query \and(b : Boolean) : Boolean;
  query \or(b : Boolean) : Boolean;
  query \xor(b : Boolean) : Boolean;
  query implies(b : Boolean) : Boolean;
end;

class Number specializes Primitive
  query add(r : Number) : Number;
  query subtract(r : Number) : Number;
  query subtract() : Number;
  query multiply(r : Number) : Number;
  query divide(r : Number) : Number;
  query asInteger() : Integer;
  query asDouble() : Double;
end;

class Integer specializes Double
  query add(r : Integer) : Integer;
  query subtract(r : Integer) : Integer;
  query subtract() : Integer;
  query multiply(r : Integer) : Integer;
  query divide(r : Integer) : Integer;
end;

class Double specializes Number
  query add(r : Number) : Double;
  query subtract(r : Number) : Double;
  query multiply(r : Number) : Double;
  query divide(r : Number) : Double;
  query subtract() : Double;
end;

class Date specializes Primitive
  static query today() : Date;
  static query now() : Date;
  static query make(year : Integer, month : Integer, day : Integer) : Date;
  static query fromString(string : String) : Date;
  query difference(another : Date) : Duration;
  query day() : Integer;
  query month() : Integer;
  query year() : Integer;
  query transpose(delta : Duration) : Date;
end;

class Duration specializes Primitive
  query toYears() : Integer;
  query toMonths() : Integer;
  query toDays() : Integer;
  query toHour() : Integer;
  query toMinutes() : Integer;
  query toSeconds() : Integer;  

  static query milliseconds(value : Number) : Duration;
  static query seconds(value : Number) : Duration;
  static query minutes(value : Number) : Duration;
  static query hours(value : Number) : Duration;
  static query days(value : Number) : Duration;
end;

class String specializes Primitive
  query isEmpty() : Boolean;
  query size() : Integer;
  query add(s : String) : String;
  query add(s : any) : String;
  query substring(start : Integer,stop : Integer) : String;
  query toLower() : String;
  query toUpper() : String;
  query contains(another : String) : Boolean;
end;

class Memo specializes String
  query lineCount() : Integer;
  static query fromString(string : String) : Memo;
end;

class Email specializes String
end;

class Violation
end;

end.

