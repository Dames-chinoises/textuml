profile mdd_extensions;

private import PrimitiveTypes::Boolean;
private import PrimitiveTypes::Integer;
private import PrimitiveTypes::String;

stereotype Test extends UML::Class
end;

stereotype Failure extends UML::Operation
    property context : PrimitiveTypes::String;
    property constraint : PrimitiveTypes::String;
end;

(* External classes are implemented as Java classes *)
stereotype External extends UML::Class
end;

(* Debuggable elements can have line number info *)
stereotype Debuggable extends UML::Element
  property lineNumber : Integer;
  property source : String;
end;

(* Operations marked as entryPoint can be used to run a model *)
stereotype EntryPoint extends UML::Operation
end;

stereotype Name extends UML::Property end;

stereotype Closure extends UML::Activity 
    property context : UML::StructuredActivityNode;
end;

stereotype ObjectInitialization extends UML::StructuredActivityNode
end;

stereotype Cast extends UML::StructuredActivityNode
end;

stereotype ConstraintBehavior extends UML::Activity 
    property constraint : UML::Constraint;
end;

stereotype Signature extends UML::Interface
    property context : UML::Namespace;
end;

stereotype MetaReference extends UML::LiteralNull
    property target : UML::Element;
end;

stereotype BasicValue extends UML::LiteralString
    property basicType : UML::Classifier;
end;

stereotype VertexLiteral extends UML::LiteralNull
    property vertex : UML::Vertex;
end;

stereotype Rule extends UML::Constraint
    property violation : UML::Classifier;
end;

stereotype Invariant extends UML::Constraint
end;

stereotype Derivation extends UML::Activity
    property context : UML::TypedElement;
end;

enumeration AccessCapability
    /* Objects */
    Create;
    Delete;
    /* Attributes/links */
    Read;
    Update;
    /* Operations */
    Call;
end;

(* You can declare access constraints on any element. *)
stereotype Access specializes Invariant
    property roles : Class[1,*];
    property allowed : AccessCapability[*];
    property denied : AccessCapability[*];
end;

(* A role class is a class that represents the role for a user. *)
stereotype Role extends UML::Class end;

stereotype PropertyDerivation extends UML::Constraint
end;

stereotype WildcardType extends UML::Type
    property context : UML::Namespace;
end;

stereotype WildcardTypeContext extends UML::Namespace
    property wildcardTypes : UML::Type[*];
end;


end.