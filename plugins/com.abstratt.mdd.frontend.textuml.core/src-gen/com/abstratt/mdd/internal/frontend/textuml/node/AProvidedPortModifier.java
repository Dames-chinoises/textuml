/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.internal.frontend.textuml.node;

import com.abstratt.mdd.internal.frontend.textuml.analysis.*;

@SuppressWarnings("nls")
public final class AProvidedPortModifier extends PPortModifier
{
    private TProvided _provided_;

    public AProvidedPortModifier()
    {
        // Constructor
    }

    public AProvidedPortModifier(
        @SuppressWarnings("hiding") TProvided _provided_)
    {
        // Constructor
        setProvided(_provided_);

    }

    @Override
    public Object clone()
    {
        return new AProvidedPortModifier(
            cloneNode(this._provided_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAProvidedPortModifier(this);
    }

    public TProvided getProvided()
    {
        return this._provided_;
    }

    public void setProvided(TProvided node)
    {
        if(this._provided_ != null)
        {
            this._provided_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._provided_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._provided_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._provided_ == child)
        {
            this._provided_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._provided_ == oldChild)
        {
            setProvided((TProvided) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
