/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.internal.frontend.textuml.node;

import com.abstratt.mdd.internal.frontend.textuml.analysis.*;

@SuppressWarnings("nls")
public final class AAssociationTopLevelElementChoice extends PTopLevelElementChoice
{
    private PAssociationDef _associationDef_;

    public AAssociationTopLevelElementChoice()
    {
        // Constructor
    }

    public AAssociationTopLevelElementChoice(
        @SuppressWarnings("hiding") PAssociationDef _associationDef_)
    {
        // Constructor
        setAssociationDef(_associationDef_);

    }

    @Override
    public Object clone()
    {
        return new AAssociationTopLevelElementChoice(
            cloneNode(this._associationDef_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAssociationTopLevelElementChoice(this);
    }

    public PAssociationDef getAssociationDef()
    {
        return this._associationDef_;
    }

    public void setAssociationDef(PAssociationDef node)
    {
        if(this._associationDef_ != null)
        {
            this._associationDef_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._associationDef_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._associationDef_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._associationDef_ == child)
        {
            this._associationDef_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._associationDef_ == oldChild)
        {
            setAssociationDef((PAssociationDef) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
