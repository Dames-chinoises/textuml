/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.internal.frontend.textuml.node;

import com.abstratt.mdd.internal.frontend.textuml.analysis.*;

@SuppressWarnings("nls")
public final class ATupleOperand extends POperand
{
    private PTupleConstructor _tupleConstructor_;

    public ATupleOperand()
    {
        // Constructor
    }

    public ATupleOperand(
        @SuppressWarnings("hiding") PTupleConstructor _tupleConstructor_)
    {
        // Constructor
        setTupleConstructor(_tupleConstructor_);

    }

    @Override
    public Object clone()
    {
        return new ATupleOperand(
            cloneNode(this._tupleConstructor_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATupleOperand(this);
    }

    public PTupleConstructor getTupleConstructor()
    {
        return this._tupleConstructor_;
    }

    public void setTupleConstructor(PTupleConstructor node)
    {
        if(this._tupleConstructor_ != null)
        {
            this._tupleConstructor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tupleConstructor_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tupleConstructor_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tupleConstructor_ == child)
        {
            this._tupleConstructor_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tupleConstructor_ == oldChild)
        {
            setTupleConstructor((PTupleConstructor) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
