/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.internal.frontend.textuml.node;

import com.abstratt.mdd.internal.frontend.textuml.analysis.*;

@SuppressWarnings("nls")
public final class AEnumerationLiteralDeclList extends PEnumerationLiteralDeclList
{
    private PEnumerationLiteralDecl _enumerationLiteralDecl_;
    private PEnumerationLiteralDeclListTail _enumerationLiteralDeclListTail_;

    public AEnumerationLiteralDeclList()
    {
        // Constructor
    }

    public AEnumerationLiteralDeclList(
        @SuppressWarnings("hiding") PEnumerationLiteralDecl _enumerationLiteralDecl_,
        @SuppressWarnings("hiding") PEnumerationLiteralDeclListTail _enumerationLiteralDeclListTail_)
    {
        // Constructor
        setEnumerationLiteralDecl(_enumerationLiteralDecl_);

        setEnumerationLiteralDeclListTail(_enumerationLiteralDeclListTail_);

    }

    @Override
    public Object clone()
    {
        return new AEnumerationLiteralDeclList(
            cloneNode(this._enumerationLiteralDecl_),
            cloneNode(this._enumerationLiteralDeclListTail_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEnumerationLiteralDeclList(this);
    }

    public PEnumerationLiteralDecl getEnumerationLiteralDecl()
    {
        return this._enumerationLiteralDecl_;
    }

    public void setEnumerationLiteralDecl(PEnumerationLiteralDecl node)
    {
        if(this._enumerationLiteralDecl_ != null)
        {
            this._enumerationLiteralDecl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._enumerationLiteralDecl_ = node;
    }

    public PEnumerationLiteralDeclListTail getEnumerationLiteralDeclListTail()
    {
        return this._enumerationLiteralDeclListTail_;
    }

    public void setEnumerationLiteralDeclListTail(PEnumerationLiteralDeclListTail node)
    {
        if(this._enumerationLiteralDeclListTail_ != null)
        {
            this._enumerationLiteralDeclListTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._enumerationLiteralDeclListTail_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._enumerationLiteralDecl_)
            + toString(this._enumerationLiteralDeclListTail_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._enumerationLiteralDecl_ == child)
        {
            this._enumerationLiteralDecl_ = null;
            return;
        }

        if(this._enumerationLiteralDeclListTail_ == child)
        {
            this._enumerationLiteralDeclListTail_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._enumerationLiteralDecl_ == oldChild)
        {
            setEnumerationLiteralDecl((PEnumerationLiteralDecl) newChild);
            return;
        }

        if(this._enumerationLiteralDeclListTail_ == oldChild)
        {
            setEnumerationLiteralDeclListTail((PEnumerationLiteralDeclListTail) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
