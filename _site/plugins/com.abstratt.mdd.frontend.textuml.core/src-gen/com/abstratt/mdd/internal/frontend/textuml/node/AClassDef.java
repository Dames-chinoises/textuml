/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.internal.frontend.textuml.node;

import com.abstratt.mdd.internal.frontend.textuml.analysis.*;

@SuppressWarnings("nls")
public final class AClassDef extends PClassDef
{
    private PAnnotations _annotations_;
    private PClassHeader _classHeader_;
    private PFeatureDeclList _featureDeclList_;
    private TEnd _end_;
    private TSemicolon _semicolon_;

    public AClassDef()
    {
        // Constructor
    }

    public AClassDef(
        @SuppressWarnings("hiding") PAnnotations _annotations_,
        @SuppressWarnings("hiding") PClassHeader _classHeader_,
        @SuppressWarnings("hiding") PFeatureDeclList _featureDeclList_,
        @SuppressWarnings("hiding") TEnd _end_,
        @SuppressWarnings("hiding") TSemicolon _semicolon_)
    {
        // Constructor
        setAnnotations(_annotations_);

        setClassHeader(_classHeader_);

        setFeatureDeclList(_featureDeclList_);

        setEnd(_end_);

        setSemicolon(_semicolon_);

    }

    @Override
    public Object clone()
    {
        return new AClassDef(
            cloneNode(this._annotations_),
            cloneNode(this._classHeader_),
            cloneNode(this._featureDeclList_),
            cloneNode(this._end_),
            cloneNode(this._semicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAClassDef(this);
    }

    public PAnnotations getAnnotations()
    {
        return this._annotations_;
    }

    public void setAnnotations(PAnnotations node)
    {
        if(this._annotations_ != null)
        {
            this._annotations_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._annotations_ = node;
    }

    public PClassHeader getClassHeader()
    {
        return this._classHeader_;
    }

    public void setClassHeader(PClassHeader node)
    {
        if(this._classHeader_ != null)
        {
            this._classHeader_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classHeader_ = node;
    }

    public PFeatureDeclList getFeatureDeclList()
    {
        return this._featureDeclList_;
    }

    public void setFeatureDeclList(PFeatureDeclList node)
    {
        if(this._featureDeclList_ != null)
        {
            this._featureDeclList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._featureDeclList_ = node;
    }

    public TEnd getEnd()
    {
        return this._end_;
    }

    public void setEnd(TEnd node)
    {
        if(this._end_ != null)
        {
            this._end_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._end_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return this._semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(this._semicolon_ != null)
        {
            this._semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._annotations_)
            + toString(this._classHeader_)
            + toString(this._featureDeclList_)
            + toString(this._end_)
            + toString(this._semicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._annotations_ == child)
        {
            this._annotations_ = null;
            return;
        }

        if(this._classHeader_ == child)
        {
            this._classHeader_ = null;
            return;
        }

        if(this._featureDeclList_ == child)
        {
            this._featureDeclList_ = null;
            return;
        }

        if(this._end_ == child)
        {
            this._end_ = null;
            return;
        }

        if(this._semicolon_ == child)
        {
            this._semicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._annotations_ == oldChild)
        {
            setAnnotations((PAnnotations) newChild);
            return;
        }

        if(this._classHeader_ == oldChild)
        {
            setClassHeader((PClassHeader) newChild);
            return;
        }

        if(this._featureDeclList_ == oldChild)
        {
            setFeatureDeclList((PFeatureDeclList) newChild);
            return;
        }

        if(this._end_ == oldChild)
        {
            setEnd((TEnd) newChild);
            return;
        }

        if(this._semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
