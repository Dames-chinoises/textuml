/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.internal.frontend.textuml.node;

import com.abstratt.mdd.internal.frontend.textuml.analysis.*;

@SuppressWarnings("nls")
public final class AGreaterThanComparisonBinaryOperator extends PComparisonBinaryOperator
{
    private TRab _rab_;

    public AGreaterThanComparisonBinaryOperator()
    {
        // Constructor
    }

    public AGreaterThanComparisonBinaryOperator(
        @SuppressWarnings("hiding") TRab _rab_)
    {
        // Constructor
        setRab(_rab_);

    }

    @Override
    public Object clone()
    {
        return new AGreaterThanComparisonBinaryOperator(
            cloneNode(this._rab_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGreaterThanComparisonBinaryOperator(this);
    }

    public TRab getRab()
    {
        return this._rab_;
    }

    public void setRab(TRab node)
    {
        if(this._rab_ != null)
        {
            this._rab_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rab_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._rab_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._rab_ == child)
        {
            this._rab_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._rab_ == oldChild)
        {
            setRab((TRab) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
