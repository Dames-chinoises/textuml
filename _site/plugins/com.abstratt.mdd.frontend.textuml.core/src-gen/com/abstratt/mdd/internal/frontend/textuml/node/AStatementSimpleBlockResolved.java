/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstratt.mdd.internal.frontend.textuml.node;

import com.abstratt.mdd.internal.frontend.textuml.analysis.*;

@SuppressWarnings("nls")
public final class AStatementSimpleBlockResolved extends PSimpleBlockResolved
{
    private PSimpleStatementBlock _simpleStatementBlock_;

    public AStatementSimpleBlockResolved()
    {
        // Constructor
    }

    public AStatementSimpleBlockResolved(
        @SuppressWarnings("hiding") PSimpleStatementBlock _simpleStatementBlock_)
    {
        // Constructor
        setSimpleStatementBlock(_simpleStatementBlock_);

    }

    @Override
    public Object clone()
    {
        return new AStatementSimpleBlockResolved(
            cloneNode(this._simpleStatementBlock_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStatementSimpleBlockResolved(this);
    }

    public PSimpleStatementBlock getSimpleStatementBlock()
    {
        return this._simpleStatementBlock_;
    }

    public void setSimpleStatementBlock(PSimpleStatementBlock node)
    {
        if(this._simpleStatementBlock_ != null)
        {
            this._simpleStatementBlock_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._simpleStatementBlock_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._simpleStatementBlock_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._simpleStatementBlock_ == child)
        {
            this._simpleStatementBlock_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._simpleStatementBlock_ == oldChild)
        {
            setSimpleStatementBlock((PSimpleStatementBlock) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
